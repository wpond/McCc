
home = {x=-1252,y=72,z=926}
loc = home
dir = 3

headings = {
	"north",
	"east",
	"south",
	"west"
}

xDiff = { 0, 1, 0, -1 }
zDiff = { -1, 0, 1, 0 }

turtle_cmds =  { 
	base_tl = turtle.turnLeft,
	base_tr = turtle.turnRight,
	base_tf = turtle.forward,
	base_tb = turtle.back,
	base_tu = turtle.up,
	base_td = turtle.down
}
base_print = print

function printLocation()
	print("(x = " .. loc.x .. ", y = " .. loc.y .. ", z = " .. loc.z .. ")")
	print("Facing " .. headings[dir + 1])
end

turtle.turnLeft = function()

	dir = (dir - 1) % 4;
	turtle_cmds.base_tl()
	
end

turtle.turnRight = function()

	dir = (dir + 1) % 4;
	turtle_cmds.base_tr()
	
end

turtle.up = function()

	if turtle_cmds.base_tu() then
		loc.y = loc.y + 1
		return true
	end
	
	return false

end

turtle.down = function()

	if turtle_cmds.base_td() then
		loc.y = loc.y - 1
		return true
	end
	
	return false

end

turtle.forward = function()
	
	if turtle_cmds.base_tf() then
		loc.x = loc.x + xDiff[dir+1]
		loc.z = loc.z + zDiff[dir+1]
		return true
	end
	
	return false
	
end

turtle.back = function()
	
	if turtle_cmds.base_tb() then
		loc.x = loc.x - xDiff[dir+1]
		loc.z = loc.z - zDiff[dir+1]
		return true
	end
	
	return false
	
end

function dig()
	turtle.dig()
	turtle.digDown()
	turtle.digUp()
end

rednet.close("right")
rednet.open("right")

print = function(msg)
	base_print (msg)
	rednet.broadcast(msg)
end

while loc.y > 11 do
	if not turtle.down() then
		turtle.digDown()
		turtle.down()
	end
	printLocation()
end

for j = 1,3 do
	for i = 1,6 do
		dig()
		turtle.forward()
		printLocation()
	end
	turtle.turnLeft()
	dig()
	turtle.forward()
	printLocation()
	turtle.turnLeft()
	for i = 1,3 do
		dig()
		turtle.forward()
		printLocation()
	end
	turtle.turnRight()
	dig()
	turtle.turnRight()
	turtle.forward()
	printLocation()
end

turtle.turnRight()
for i = 1,7 do
	turtle.forward()
	printLocation()
end

while loc.y < home.y do
	turtle.up()
	printLocation()
end

